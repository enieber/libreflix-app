// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Curry from 'bs-platform/lib/es6/curry.js';
import * as React from 'react';
import * as Belt_Option from 'bs-platform/lib/es6/belt_Option.js';
import * as Caml_option from 'bs-platform/lib/es6/caml_option.js';
import * as ReactNative from 'react-native';
import * as ReactNativePaper from 'react-native-paper';

var styles = ReactNative.StyleSheet.create({
  sectionContainer: {
    marginTop: 32,
    paddingHorizontal: 24,
  },
  sectionTitle: {
    fontSize: 24,
    fontWeight: '600',
  },
  sectionDescription: {
    fontSize: 18,
    fontWeight: '400',
    marginTop: 8,
  },
  highlight: {
    fontWeight: '700',
  },
});

function useIsDarkMode(param) {
  return Belt_Option.getWithDefault(
    Belt_Option.map(
      Caml_option.null_to_opt(ReactNative.useColorScheme()),
      function (scheme) {
        return scheme === 'dark';
      },
    ),
    false,
  );
}

function App$app(Props) {
  var match = React.useState(function () {
    return false;
  });
  var setVisible = match[1];
  return React.createElement(
    ReactNative.SafeAreaView,
    {
      children: null,
    },
    React.createElement(ReactNative.StatusBar, {}),
    React.createElement(
      ReactNative.ScrollView,
      {
        contentInsetAdjustmentBehavior: 'automatic',
        children: null,
      },
      React.createElement(ReactNative.Text, {
        children: 'src/App.re',
        style: styles.highlight,
      }),
      React.createElement(ReactNativePaper.Portal, {
        children: React.createElement(ReactNativePaper.Dialog, {
          visible: match[0],
          onDismiss: function (param) {
            return Curry._1(setVisible, function (param) {
              return false;
            });
          },
          children: React.createElement(ReactNativePaper.Dialog.Title, {
            children: 'Title',
          }),
        }),
      }),
    ),
  );
}

var app = App$app;

export {styles, useIsDarkMode, app};
/* styles Not a pure module */
